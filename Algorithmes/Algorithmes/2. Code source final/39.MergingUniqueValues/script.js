// function merging() {

//   const uniqueMergedValues = [];

//   // console.log([...arguments]);

//   [...arguments].forEach(subArray => subArray.forEach(el => uniqueMergedValues.indexOf(el) === -1 && uniqueMergedValues.push(el)))

//   return uniqueMergedValues;
// }

function merging() {
  return [...new Set([...arguments].flat())]
}


/* Ã‰NONCÃ‰ ðŸ“š */

/*
  Codez un algorithme qui fusionne les tableaux qu'il reÃ§oit en argument en un seul tableau contenant seulement des valeurs uniques, tout en respectant l'ordre initial des Ã©lÃ©ments, et qui retourne ce tableau.
*/

/* Tests Ã  passer ðŸ§ª */

console.log(merging([1,2,3],[4,5,6],[7,8,9]));      // [1, 2, 3, 4, 5, 6, 7, 8, 9]
console.log(merging(["z","a","z"],["a","z","z"]));  // [ 'z', 'a' ]  
console.log(merging([65,45,78,95],[65,45,78,95]));  // [ 65, 45, 78, 95 ]